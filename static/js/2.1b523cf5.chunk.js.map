{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","containers/git-repo/action.js","components/commit-list/commit-list.jsx","components/repo-list/repos.jsx","components/user-list/users-list.jsx","containers/git-repo/gitRepoContainer.js"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","fetchUsers","type","FETCH_REPOS","fetchUserDetails","login","FETCH_USER_DATA","payload","fetchRepoDetails","ownerLogin","repoName","dispatch","axios","get","then","data","FETCH_REPO_DETAILS_SUCCESS","catch","error","FETCH_REPO_DETAILS_FAILURE","Commit","connect","repoDetails","repos","actions","memo","isLoading","isError","details","props","map","index","message","commit","html_url","includes","repoHtmlUrl","displayName","Repo","userData","repoIndex","node_id","name","owner","onClick","e","stopPropagation","Users","users","className","useEffect"],"mappings":"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","file":"static/js/2.1b523cf5.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import {\r\n  FETCH_REPOS,\r\n  FETCH_USER_DATA,\r\n  FETCH_REPO_DETAILS_SUCCESS,\r\n  FETCH_REPO_DETAILS_FAILURE,\r\n} from \"./constant\";\r\nimport axios from \"axios\";\r\n\r\nexport function fetchUsers() {\r\n  return { type: FETCH_REPOS };\r\n}\r\n\r\nexport function fetchUserDetails(login) {\r\n  return { type: FETCH_USER_DATA, payload: login };\r\n}\r\n\r\nexport function fetchRepoDetails(ownerLogin, repoName) {\r\n  return function (dispatch) {\r\n    return (\r\n      axios\r\n        // .get(`https://api.github.com/repos/${ownerLogin}/${repoName}/commits`)\r\n        .get(`https://jsonblob.com/api/9c3b8d9d-ce9c-11ea-a271-dd9248579c31`)\r\n        .then(({ data }) =>\r\n          dispatch({ type: FETCH_REPO_DETAILS_SUCCESS, payload: data })\r\n        )\r\n        .catch((error) =>\r\n          dispatch({ type: FETCH_REPO_DETAILS_FAILURE, payload: error })\r\n        )\r\n    );\r\n  };\r\n}\r\n","import React, { memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../containers/git-repo/action\";\r\n\r\nexport const Commit = connect(\r\n  mapStateToProps,\r\n  actions\r\n)(\r\n  memo(\r\n    ({\r\n      repoDetails: {\r\n        isLoading: isRepoLoading,\r\n        isError: isRepoError,\r\n        details: repoDetails,\r\n      },\r\n      ...props\r\n    }) => (\r\n      <ul>\r\n        {repoDetails &&\r\n          repoDetails.map(\r\n            ({ commit: { message }, html_url: commitHtmlUrl }, index) =>\r\n              commitHtmlUrl.includes(props.repoHtmlUrl) ? (\r\n                <li key={index}>{message}</li>\r\n              ) : null\r\n          )}\r\n      </ul>\r\n    )\r\n  )\r\n);\r\n\r\nfunction mapStateToProps({ repos: { repoDetails } }) {\r\n  return { repoDetails };\r\n}\r\n\r\nCommit.displayName = \"Commit\";\r\n","import React, { memo } from \"react\";\r\nimport { Commit } from \"../commit-list/commit-list\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../containers/git-repo/action\";\r\n// import { arraysAreEqual } from \"../../common/utils\";\r\n\r\n// const areEqual = (prevProps, nextProps) => {\r\n//   // console.log({\r\n//   //   userDataPrevious: prevProps.userData.details,\r\n//   //   userDataNew: nextProps.userData.details,\r\n//   // });\r\n\r\n//   // console.log({\r\n//   //   repoDetailsPrevious: prevProps.repoDetails.details,\r\n//   //   repoDetailsNew: nextProps.repoDetails.details,\r\n//   // });\r\n\r\n//   console.log(\r\n//     \"arraysAreEqual(prevProps.userData.details, nextProps.userData.details)\",\r\n//     arraysAreEqual(prevProps.userData.details, nextProps.userData.details)\r\n//   );\r\n\r\n//   console.log(\r\n//     \"arraysAreEqual(prevProps.repoDetails.details, nextProps.repoDetails.details)\",\r\n//     arraysAreEqual(prevProps.repoDetails.details, nextProps.repoDetails.details)\r\n//   );\r\n\r\n//   if (\r\n//     0\r\n//     // arraysAreEqual(prevProps.userData.details, nextProps.userData.details)\r\n//     //  ||    arraysAreEqual(prevProps.repoDetails.details, nextProps.repoDetails.details)\r\n//   ) {\r\n//     // don't render if Props.userData.details are equal\r\n//     return true;\r\n//   } else {\r\n//     return false;\r\n//   }\r\n// };\r\n\r\nexport const Repo = connect(\r\n  mapStateToProps,\r\n  actions\r\n)(\r\n  memo(\r\n    ({\r\n      userData: { isLoading: isDetailLoading, isError: isDetailError, details },\r\n\r\n      ...props\r\n    }) => (\r\n      <ul>\r\n        {details &&\r\n          details.map(\r\n            (\r\n              {\r\n                node_id,\r\n                name: repoName,\r\n                html_url: repoHtmlUrl,\r\n                owner: { login: ownerLogin },\r\n              },\r\n              repoIndex\r\n            ) =>\r\n              ownerLogin === props.login ? (\r\n                <li\r\n                  key={repoIndex}\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    props.fetchRepoDetails(ownerLogin, repoName);\r\n                  }}\r\n                >\r\n                  {repoName}\r\n                  <Commit repoHtmlUrl={repoHtmlUrl} />\r\n                </li>\r\n              ) : null\r\n          )}\r\n      </ul>\r\n    )\r\n  )\r\n);\r\n\r\nfunction mapStateToProps({ repos: { userData } }) {\r\n  return { userData };\r\n}\r\n\r\nRepo.displayName = \"Repo\";\r\n","import React, { memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../containers/git-repo/action\";\r\nimport { Repo } from \"../repo-list/repos\";\r\n\r\nexport const Users = connect(\r\n  mapPropsToState,\r\n  actions\r\n)(\r\n  memo(({ users, fetchUserDetails, ...props }) => (\r\n    <ul className=\"check-list\">\r\n      {users &&\r\n        users.map(({ login, node_id }) => {\r\n          return (\r\n            <li\r\n              key={node_id}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                fetchUserDetails(login);\r\n              }}\r\n            >\r\n              {login}\r\n              <Repo login={login} />\r\n            </li>\r\n          );\r\n        })}\r\n    </ul>\r\n  ))\r\n);\r\n\r\nfunction mapPropsToState({ repos: { users } }) {\r\n  return { users };\r\n}\r\n\r\nUsers.displayName = \"Users\";\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"./action\";\r\nimport { Users } from \"../../components/user-list/users-list\";\r\n\r\nfunction GitRepoContainer({ ...props }) {\r\n  useEffect(() => {\r\n    const { fetchUsers } = props;\r\n    fetchUsers();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return <Users />;\r\n}\r\n\r\nexport default connect(\r\n  ({ repos }) => ({ ...repos }),\r\n  actions\r\n)(GitRepoContainer);\r\n"],"sourceRoot":""}