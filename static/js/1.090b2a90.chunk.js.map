{"version":3,"sources":["components/counter/counter.jsx","containers/counter/counter-container.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["Counter","counter","dispatch","props","console","log","onClick","type","INCREMENT","DECREMENT","connect","count","useDispatch","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"mappings":"2KAGe,SAASA,EAAT,GAAmD,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,SAAaC,EAAS,sCAE/D,OADAC,QAAQC,IAAI,UAAWF,GAErB,oCACE,wCAAcF,GACd,4BAAQK,QAAS,kBAAMJ,EAAS,CAAEK,KAAMC,QAAxC,aACA,4BAAQF,QAAS,kBAAMJ,EAAS,CAAEK,KAAME,QAAxC,c,MCyBSC,uBAfS,SAAC,GACvB,MAAO,CAAET,QADyC,EAAzBU,MAASV,WAeI,GAAzBS,EA3Bf,SAA0BP,GAExB,IAAMD,EAAWU,cACjB,OACE,oCAEE,kBAACZ,EAAD,iBAAaG,EAAb,CAAoBD,SAAUA,U,gCCZrB,SAASW,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDTM,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GAEpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,E","file":"static/js/1.090b2a90.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { INCREMENT, DECREMENT } from \"../../containers/counter/constants\";\r\n\r\nexport default function Counter({ counter, dispatch, ...props }) {\r\n  console.log(\"counter\", props);\r\n  return (\r\n    <>\r\n      <h1>Counter: {counter}</h1>\r\n      <button onClick={() => dispatch({ type: INCREMENT })}>Increment</button>\r\n      <button onClick={() => dispatch({ type: DECREMENT })}>Decrement</button>\r\n    </>\r\n  );\r\n}\r\n","import React, { useReducer } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { increment, decrement } from \"./actions\";\r\nimport Counter from \"../../components/counter/counter\";\r\nimport { countReducer } from \"./reducers\";\r\nimport { INCREMENT, DECREMENT } from \"./constants\";\r\n\r\nfunction CounterContainer(props) {\r\n  // const [state, dispatch] = useReducer(countReducer, { counter: 0 });\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      {/* <Counter {...props} dispatch={dispatch} {...state} /> */}\r\n      <Counter {...props} dispatch={dispatch} />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ count: { counter } }) => {\r\n  return { counter };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch, ownProps) => {\r\n//   return {\r\n//     increment: () => {\r\n//       dispatch(increment());\r\n//     },\r\n//     decrement: () => {\r\n//       dispatch(decrement());\r\n//     },\r\n//   };\r\n// };\r\n\r\nexport default connect(mapStateToProps, {})(CounterContainer);\r\n// export default connect(mapStateToProps, mapDispatchToProps)(CounterContainer);\r\n// export default CounterContainer;\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}